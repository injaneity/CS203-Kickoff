name: Build and Deploy Static Website to S3

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
  setup-and-build:
    runs-on: ubuntu-latest   
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'  # Adjust as needed

    - name: Install Dependencies
      run: |
        cd frontend
        npm install

    - name: Build Project with Environment Variables
      run: |
        cd frontend
        npm run build
      env:
        VITE_USER_SERVICE_BASE_URL: ${{ secrets.TF_VAR_ALB_URL }}
        VITE_TOURNAMENT_SERVICE_BASE_URL: ${{ secrets.TF_VAR_ALB_URL }}
        VITE_CLUB_SERVICE_BASE_URL: ${{ secrets.TF_VAR_ALB_URL }}
        VITE_CHATBOT_API_URL: ${{ secrets.TF_VAR_ALB_URL }}chatbot

    - name: Comment on PR if Build Fails
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            body: "ðŸš¨ The frontend build failed during the PR check. Please review the errors and fix them.",
            repo: context.repo.repo
          })
            
    - name: Configure AWS Credentials
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Sync Built Files to S3
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        aws s3 sync frontend/dist s3://${{ secrets.FRONTEND_S3_BUCKET }} --delete --acl public-read

    - name: Invalidate CloudFront Cache
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"